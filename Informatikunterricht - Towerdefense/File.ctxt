#BlueJ class context
comment0.target=File
comment0.text=\r\n\ This\ class\ contains\ some\ methods\ to\ load\ save\ and\ delete\ .txt\ files.\r\n\ The\ methods\ can\ be\ used\ in\ any\ class\ which\ imports\ the\ necessary\ classes.\r\n
comment1.params=filename\ addToExistingFile\ fileText
comment1.target=boolean\ saveFile(java.lang.String,\ boolean,\ java.lang.String[])
comment1.text=\r\n\ Saves\ the\ Strings\ given\ as\ the\ second\ to\ the\ last\ parameter\ in\ the\ file\ named\ like\ given\ in\ filename.\r\n\ \r\n\ @param\ filename\r\n\ \ \ \ \ \ The\ name\ of\ the\ file\ where\ the\ Strings\ should\ be\ saved.\r\n\ \r\n\ @param\ addToExistingFile\r\n\ \ \ \ \ \ If\ you\ want\ to\ add\ the\ text\ to\ an\ existing\ file\ this\ variable\ has\ to\ be\ true;\r\n\ \r\n\ @param\ fileText\r\n\ \ \ \ \ \ The\ strings\ that\ should\ be\ saved\ in\ the\ file.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ true\ if\ the\ file\ was\ successfully\ createt.\ False\ if\ not.\r\n
comment2.params=filename
comment2.target=java.util.List\ loadFile(java.lang.String)
comment2.text=\r\n\ Loads\ the\ text\ of\ the\ file\ whith\ the\ given\ filename.\r\n\ \r\n\ @param\ filename\r\n\ \ \ \ \ \ The\ name\ of\ the\ file\ that\ should\ be\ loaded.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ a\ list\ of\ Strings\ consisting\ of\ the\ text\ of\ the\ file.\r\n\ \ \ \ \ \ Each\ line\ of\ the\ file\ is\ a\ new\ element\ of\ the\ list.\r\n
comment3.params=filename
comment3.target=boolean\ deleteFile(java.lang.String)
comment3.text=\r\n\ Deletes\ the\ content\ of\ a\ file.\r\n\ \r\n\ @param\ filename\r\n\ \ \ \ \ \ The\ name\ of\ the\ file\ that\ should\ be\ deleted.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ true\ if\ the\ file\ has\ ben\ deleted\ or\ if\ the\ file\ didn't\ exist.\r\n\ \ \ \ \ \ Returns\ false\ if\ there\ is\ a\ IOException.\r\n
comment4.params=filename
comment4.target=boolean\ fileExisting(java.lang.String)
comment4.text=\r\n\ Check\ whether\ a\ file\ with\ the\ given\ name\ is\ currently\ existing.\r\n\ \r\n\ @param\ filename\r\n\ \ \ \ \ \ The\ name\ of\ the\ file\ that\ should\ be\ checked.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ Returns\ true\ if\ the\ file\ is\ existing.\r\n\ \ \ \ \ \ Returns\ false\ if\ the\ file\ is\ not\ found\ or\ if\ there\ was\ a\ IOException.\r\n
comment5.params=path
comment5.target=java.util.List\ getExistingFileNames(java.lang.String)
comment5.text=\r\n\ Returns\ a\ list\ of\ Strings\ concerning\ the\ names\ of\ all\ existing\ files\ in\ the\ choosen\ directiory.\r\n
comment6.params=path
comment6.target=java.util.List\ getExistingFiles(java.lang.String)
comment6.text=\r\n\ Returns\ a\ list\ of\ all\ files\ in\ the\ choosen\ directory.\r\n
numComments=7
